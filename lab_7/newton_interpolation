import numpy as np
import matplotlib.pyplot as plt

xi = np.array([x*0.005 + 0.18 for x in range(0, 11)])
xi = np.round(xi, 3)
yi = [5.5154,5.4669,5.3263,5.1930,5.0664,4.9461,4.8317,4.7226,4.6185,4.5191,4.4242]
x_values_1 = [0.184, 0.189, 0.193]
x_values_2 = [0.221, 0.227, 0.216]
print("Точки задані таблицею:")
print("xi", end="\t")
for x in xi:
    print(x, end="\t")
print()
print("yi", end="\t")
for y in yi:
    print(y, end="\t")  
print()

def newton_interpolation_1(x, xi, yi):
    result = 0.0
    for i in range(len(xi)):
        term = yi[i]
        for j in range(i):
            term *= (x - xi[j]) / (xi[i] - xi[j])
        result += term
    return result

def newton_interpolation_2(x, xi, yi):
    result = yi[0]
    for i in range(1, len(xi)):
        term = yi[i]
        for j in range(i):
            term *= (x - xi[j]) / (xi[i] - xi[j])
        result += term
    return result

y_values_1 = [newton_interpolation_1(x, xi, yi) for x in x_values_1]
y_values_2 = [newton_interpolation_2(x, xi, yi) for x in x_values_2]
print("Значення функцій в заданих точках:")
for i, x in enumerate(x_values_1):
    print(f"f({x}) = {y_values_1[i]}")
for i, x in enumerate(x_values_2):
    print(f"f({x}) = {y_values_2[i]}")

import numpy as np
import math
from scipy import integrate
def integrand_function(x):
    return 1/math.sqrt(3*x + 1)
v,err = integrate.quad(integrand_function,1.4,2.2)

def left_rectangle_rule_integration(a, b, n):
    integral_value = 0
    width = (b - a) / n
    for i in range(n):
        x_i = a + i * width
        integral_value += integrand_function(x_i) * width
    return integral_value

def right_rectangle_rule_integration(a, b, n):
    integral_value = 0
    width = (b - a) / n
    for i in range(1, n + 1):
        x_i = a + i * width
        integral_value += integrand_function(x_i) * width
    return integral_value

def midpoint_rectangle_rule_integration(a, b, n):
    integral_value = 0
    width = (b - a) / n
    for i in range(n):
        x_i = a + (i + 0.5) * width
        integral_value += integrand_function(x_i) * width
    return integral_value

def calculate_integral(method, a, b, n,epsilon):
    result = method(a, b, n)
    while True:
        n *= 2
        new_result = method(a, b, n)
        if abs(new_result - result) < epsilon:
            return new_result
        result = new_result

a = 1.4
b = 2.2
n = 10
epsilon = 0.0001

left_result = calculate_integral(left_rectangle_rule_integration, a, b, n, epsilon)
right_result = calculate_integral(right_rectangle_rule_integration, a, b, n, epsilon)
midpoint_result = calculate_integral(midpoint_rectangle_rule_integration, a, b, n, epsilon)

print(f"Лівий прямокутник: {left_result:.5f}")
print(f"Правий прямокутник: {right_result:.5f}")
print(f"Середній прямокутник: {midpoint_result:.5f}")
print("Перевірка методу:", round(v, 5))

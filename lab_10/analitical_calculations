# Аналітичні розрахунки(наближення прямою)
import numpy as np

def func(x):
    return np.sin(2 * x + 1) + 2 * x

x = np.arange(0.1, 1.1, 0.1)
y = func(x)

x_mean = np.mean(x)
y_mean = np.mean(y)
xy_mean = np.mean(x * y)
x_squared_mean = np.mean(x**2)
x_cubic_mean = np.mean(x**3)
x_forth_mean = np.mean(x**4)
xy_squared_mean = np.mean((x**2) * y)
a1 = (xy_mean - x_mean * y_mean) / (x_squared_mean - x_mean**2)
a0 = y_mean - a1 * x_mean

print("Лінйна апроксимація:")
print(f"a1: {a1:.2f}")
print(f"a0: {a0:.2f}")
print(f"f(x) ≈ {a1:.2f}x + {a0:.2f} ")


# Аналітичні розрахунки(наближення параболою)
import numpy as np
def func(x):
    return np.sin(2 * x + 1) + 2 * x

x = np.arange(0.1, 1.1, 0.1)
y = func(x)

x_bar = np.mean(x)
y_bar = np.mean(y)
x_squared_bar = np.mean(x**2)
x_cubed_bar = np.mean(x**3)
x_fourth_bar = np.mean(x**4)
xy_bar = np.mean(x * y)
xy_squared_bar = np.mean((x**2) * y)

A = np.array([[1, x_bar, x_squared_bar],
              [x_bar, x_squared_bar, x_cubed_bar],
              [x_squared_bar, x_cubed_bar, x_fourth_bar]])

B = np.array([y_bar, xy_bar, xy_squared_bar])

coefficients = np.linalg.solve(A, B)
a0, a1, a2 = coefficients
print("Квадратична апроксимація:")
print(f"a0: {a0:.2f}")
print(f"a1: {a1:.2f}")
print(f"a2: {a2:.2f}")
print(f"f(x) ≈ {a2:.2f}x^2+ {a1:.2f}x + {a0:.2f}")
